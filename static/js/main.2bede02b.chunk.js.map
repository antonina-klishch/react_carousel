{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","indexStart","setIndexImage","className","style","width","map","image","index","transitionDuration","transform","src","alt","toString","type","disabled","onClick","stepShift","smile","size","length","App","state","this","method","htmlFor","id","name","value","min","max","onChange","event","setState","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bede02b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  itemWidth: number,\n  step: number,\n  frameSize: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [indexStart, setIndexImage] = useState(0);\n\n  const moveForward = (stepShift: number, smile: string[], size: number) => {\n    if (indexStart + stepShift >= smile.length - size && !infinite) {\n      setIndexImage(smile.length - size);\n    } else if (indexStart + stepShift >= smile.length - size && infinite) {\n      setIndexImage(0);\n    } else {\n      setIndexImage(indexStart + stepShift);\n    }\n  };\n\n  const moveBack = (stepShift: number, smile: string[], size: number) => {\n    if (indexStart - stepShift < 0 && !infinite) {\n      setIndexImage(0);\n    } else if (indexStart - stepShift < 0 && infinite) {\n      setIndexImage(smile.length - size);\n    } else {\n      setIndexImage(indexStart - stepShift);\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${itemWidth * frameSize}px`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n\n      >\n        {images.map((image, index) => (\n          <li\n            key={image}\n            style={{\n              transitionDuration: `${animationDuration}ms`,\n              transform: `translateX(-${indexStart * itemWidth}px)`,\n            }}\n          >\n            <img\n              src={image}\n              alt={index.toString()}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          disabled={indexStart === 0 && !infinite}\n          onClick={() => {\n            moveBack(step, images, frameSize);\n          }}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          disabled={indexStart > images.length - frameSize - 1 && !infinite}\n          onClick={() => {\n            moveForward(step, images, frameSize);\n          }}\n        >\n          Next\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <form method=\"post\" className=\"App__form\">\n\n          <label htmlFor=\"itemId\" className=\"itemWidth\">\n            ITEM WIDTH:\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              name=\"width\"\n              value={itemWidth}\n              min={130}\n              max={1300}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                this.setState({\n                  itemWidth: +event.target.value,\n                });\n              }}\n            />\n          </label>\n          <br />\n          <label htmlFor=\"frameId\" className=\"frameSize\">\n            FRAME SIZE:\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              name=\"frameSize\"\n              value={frameSize}\n              min={1}\n              max={10}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                this.setState({\n                  frameSize: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <br />\n          <label htmlFor=\"stepId\" className=\"itemWidth\">\n            STEP:\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              min={1}\n              max={10}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                this.setState({\n                  step: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <br />\n          <label htmlFor=\"durationId\" className=\"itemWidth\">\n            ANIMATION DURATION:\n            <input\n              id=\"durationId\"\n              type=\"number\"\n              name=\"duration\"\n              value={animationDuration}\n              min={100}\n              max={100000}\n              step={100}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                this.setState({\n                  animationDuration: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <br />\n          <label htmlFor=\"infiniteId\" className=\"itemWidth\">\n            INFINITE\n            <input\n              type=\"checkbox\"\n              id=\"infiniteId\"\n              name=\"step\"\n              onClick={() => {\n                this.setState({\n                  infinite: !infinite,\n                });\n              }}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}